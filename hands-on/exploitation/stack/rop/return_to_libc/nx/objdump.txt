
program:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	53                   	push   ebx
 8049001:	83 ec 08             	sub    esp,0x8
 8049004:	e8 e7 00 00 00       	call   80490f0 <__x86.get_pc_thunk.bx>
 8049009:	81 c3 f7 2f 00 00    	add    ebx,0x2ff7
 804900f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8049015:	85 c0                	test   eax,eax
 8049017:	74 05                	je     804901e <_init+0x1e>
 8049019:	e8 72 00 00 00       	call   8049090 <__gmon_start__@plt>
 804901e:	83 c4 08             	add    esp,0x8
 8049021:	5b                   	pop    ebx
 8049022:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	push   DWORD PTR ds:0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    DWORD PTR ds:0x804c008
 804903c:	00 00                	add    BYTE PTR [eax],al
	...

08049040 <printf@plt>:
 8049040:	ff 25 0c c0 04 08    	jmp    DWORD PTR ds:0x804c00c
 8049046:	68 00 00 00 00       	push   0x0
 804904b:	e9 e0 ff ff ff       	jmp    8049030 <.plt>

08049050 <gets@plt>:
 8049050:	ff 25 10 c0 04 08    	jmp    DWORD PTR ds:0x804c010
 8049056:	68 08 00 00 00       	push   0x8
 804905b:	e9 d0 ff ff ff       	jmp    8049030 <.plt>

08049060 <__stack_chk_fail@plt>:
 8049060:	ff 25 14 c0 04 08    	jmp    DWORD PTR ds:0x804c014
 8049066:	68 10 00 00 00       	push   0x10
 804906b:	e9 c0 ff ff ff       	jmp    8049030 <.plt>

08049070 <puts@plt>:
 8049070:	ff 25 18 c0 04 08    	jmp    DWORD PTR ds:0x804c018
 8049076:	68 18 00 00 00       	push   0x18
 804907b:	e9 b0 ff ff ff       	jmp    8049030 <.plt>

08049080 <__libc_start_main@plt>:
 8049080:	ff 25 1c c0 04 08    	jmp    DWORD PTR ds:0x804c01c
 8049086:	68 20 00 00 00       	push   0x20
 804908b:	e9 a0 ff ff ff       	jmp    8049030 <.plt>

Disassembly of section .plt.got:

08049090 <__gmon_start__@plt>:
 8049090:	ff 25 fc bf 04 08    	jmp    DWORD PTR ds:0x804bffc
 8049096:	66 90                	xchg   ax,ax

Disassembly of section .text:

080490a0 <_start>:
 80490a0:	31 ed                	xor    ebp,ebp
 80490a2:	5e                   	pop    esi
 80490a3:	89 e1                	mov    ecx,esp
 80490a5:	83 e4 f0             	and    esp,0xfffffff0
 80490a8:	50                   	push   eax
 80490a9:	54                   	push   esp
 80490aa:	52                   	push   edx
 80490ab:	e8 23 00 00 00       	call   80490d3 <_start+0x33>
 80490b0:	81 c3 50 2f 00 00    	add    ebx,0x2f50
 80490b6:	8d 83 b0 d2 ff ff    	lea    eax,[ebx-0x2d50]
 80490bc:	50                   	push   eax
 80490bd:	8d 83 50 d2 ff ff    	lea    eax,[ebx-0x2db0]
 80490c3:	50                   	push   eax
 80490c4:	51                   	push   ecx
 80490c5:	56                   	push   esi
 80490c6:	c7 c0 0d 92 04 08    	mov    eax,0x804920d
 80490cc:	50                   	push   eax
 80490cd:	e8 ae ff ff ff       	call   8049080 <__libc_start_main@plt>
 80490d2:	f4                   	hlt    
 80490d3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490d6:	c3                   	ret    
 80490d7:	66 90                	xchg   ax,ax
 80490d9:	66 90                	xchg   ax,ax
 80490db:	66 90                	xchg   ax,ax
 80490dd:	66 90                	xchg   ax,ax
 80490df:	90                   	nop

080490e0 <_dl_relocate_static_pie>:
 80490e0:	f3 c3                	repz ret 
 80490e2:	66 90                	xchg   ax,ax
 80490e4:	66 90                	xchg   ax,ax
 80490e6:	66 90                	xchg   ax,ax
 80490e8:	66 90                	xchg   ax,ax
 80490ea:	66 90                	xchg   ax,ax
 80490ec:	66 90                	xchg   ax,ax
 80490ee:	66 90                	xchg   ax,ax

080490f0 <__x86.get_pc_thunk.bx>:
 80490f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490f3:	c3                   	ret    
 80490f4:	66 90                	xchg   ax,ax
 80490f6:	66 90                	xchg   ax,ax
 80490f8:	66 90                	xchg   ax,ax
 80490fa:	66 90                	xchg   ax,ax
 80490fc:	66 90                	xchg   ax,ax
 80490fe:	66 90                	xchg   ax,ax

08049100 <deregister_tm_clones>:
 8049100:	b8 28 c0 04 08       	mov    eax,0x804c028
 8049105:	3d 28 c0 04 08       	cmp    eax,0x804c028
 804910a:	74 24                	je     8049130 <deregister_tm_clones+0x30>
 804910c:	b8 00 00 00 00       	mov    eax,0x0
 8049111:	85 c0                	test   eax,eax
 8049113:	74 1b                	je     8049130 <deregister_tm_clones+0x30>
 8049115:	55                   	push   ebp
 8049116:	89 e5                	mov    ebp,esp
 8049118:	83 ec 14             	sub    esp,0x14
 804911b:	68 28 c0 04 08       	push   0x804c028
 8049120:	ff d0                	call   eax
 8049122:	83 c4 10             	add    esp,0x10
 8049125:	c9                   	leave  
 8049126:	c3                   	ret    
 8049127:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804912e:	66 90                	xchg   ax,ax
 8049130:	c3                   	ret    
 8049131:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049138:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804913f:	90                   	nop

08049140 <register_tm_clones>:
 8049140:	b8 28 c0 04 08       	mov    eax,0x804c028
 8049145:	2d 28 c0 04 08       	sub    eax,0x804c028
 804914a:	c1 f8 02             	sar    eax,0x2
 804914d:	89 c2                	mov    edx,eax
 804914f:	c1 ea 1f             	shr    edx,0x1f
 8049152:	01 d0                	add    eax,edx
 8049154:	d1 f8                	sar    eax,1
 8049156:	74 20                	je     8049178 <register_tm_clones+0x38>
 8049158:	ba 00 00 00 00       	mov    edx,0x0
 804915d:	85 d2                	test   edx,edx
 804915f:	74 17                	je     8049178 <register_tm_clones+0x38>
 8049161:	55                   	push   ebp
 8049162:	89 e5                	mov    ebp,esp
 8049164:	83 ec 10             	sub    esp,0x10
 8049167:	50                   	push   eax
 8049168:	68 28 c0 04 08       	push   0x804c028
 804916d:	ff d2                	call   edx
 804916f:	83 c4 10             	add    esp,0x10
 8049172:	c9                   	leave  
 8049173:	c3                   	ret    
 8049174:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8049178:	c3                   	ret    
 8049179:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08049180 <__do_global_dtors_aux>:
 8049180:	80 3d 28 c0 04 08 00 	cmp    BYTE PTR ds:0x804c028,0x0
 8049187:	75 17                	jne    80491a0 <__do_global_dtors_aux+0x20>
 8049189:	55                   	push   ebp
 804918a:	89 e5                	mov    ebp,esp
 804918c:	83 ec 08             	sub    esp,0x8
 804918f:	e8 6c ff ff ff       	call   8049100 <deregister_tm_clones>
 8049194:	c6 05 28 c0 04 08 01 	mov    BYTE PTR ds:0x804c028,0x1
 804919b:	c9                   	leave  
 804919c:	c3                   	ret    
 804919d:	8d 76 00             	lea    esi,[esi+0x0]
 80491a0:	c3                   	ret    
 80491a1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80491a8:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80491af:	90                   	nop

080491b0 <frame_dummy>:
 80491b0:	eb 8e                	jmp    8049140 <register_tm_clones>

080491b2 <vuln>:
 80491b2:	55                   	push   ebp
 80491b3:	89 e5                	mov    ebp,esp
 80491b5:	53                   	push   ebx
 80491b6:	81 ec b4 00 00 00    	sub    esp,0xb4
 80491bc:	e8 2f ff ff ff       	call   80490f0 <__x86.get_pc_thunk.bx>
 80491c1:	81 c3 3f 2e 00 00    	add    ebx,0x2e3f
 80491c7:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80491cd:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 80491d0:	31 c0                	xor    eax,eax
 80491d2:	83 ec 0c             	sub    esp,0xc
 80491d5:	8d 83 08 e0 ff ff    	lea    eax,[ebx-0x1ff8]
 80491db:	50                   	push   eax
 80491dc:	e8 5f fe ff ff       	call   8049040 <printf@plt>
 80491e1:	83 c4 10             	add    esp,0x10
 80491e4:	83 ec 0c             	sub    esp,0xc
 80491e7:	8d 85 54 ff ff ff    	lea    eax,[ebp-0xac]
 80491ed:	50                   	push   eax
 80491ee:	e8 5d fe ff ff       	call   8049050 <gets@plt>
 80491f3:	83 c4 10             	add    esp,0x10
 80491f6:	90                   	nop
 80491f7:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80491fa:	65 33 05 14 00 00 00 	xor    eax,DWORD PTR gs:0x14
 8049201:	74 05                	je     8049208 <vuln+0x56>
 8049203:	e8 b8 00 00 00       	call   80492c0 <__stack_chk_fail_local>
 8049208:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 804920b:	c9                   	leave  
 804920c:	c3                   	ret    

0804920d <main>:
 804920d:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8049211:	83 e4 f0             	and    esp,0xfffffff0
 8049214:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8049217:	55                   	push   ebp
 8049218:	89 e5                	mov    ebp,esp
 804921a:	53                   	push   ebx
 804921b:	51                   	push   ecx
 804921c:	e8 cf fe ff ff       	call   80490f0 <__x86.get_pc_thunk.bx>
 8049221:	81 c3 df 2d 00 00    	add    ebx,0x2ddf
 8049227:	e8 86 ff ff ff       	call   80491b2 <vuln>
 804922c:	83 ec 0c             	sub    esp,0xc
 804922f:	8d 83 1c e0 ff ff    	lea    eax,[ebx-0x1fe4]
 8049235:	50                   	push   eax
 8049236:	e8 35 fe ff ff       	call   8049070 <puts@plt>
 804923b:	83 c4 10             	add    esp,0x10
 804923e:	b8 01 00 00 00       	mov    eax,0x1
 8049243:	8d 65 f8             	lea    esp,[ebp-0x8]
 8049246:	59                   	pop    ecx
 8049247:	5b                   	pop    ebx
 8049248:	5d                   	pop    ebp
 8049249:	8d 61 fc             	lea    esp,[ecx-0x4]
 804924c:	c3                   	ret    
 804924d:	66 90                	xchg   ax,ax
 804924f:	90                   	nop

08049250 <__libc_csu_init>:
 8049250:	55                   	push   ebp
 8049251:	57                   	push   edi
 8049252:	56                   	push   esi
 8049253:	53                   	push   ebx
 8049254:	e8 97 fe ff ff       	call   80490f0 <__x86.get_pc_thunk.bx>
 8049259:	81 c3 a7 2d 00 00    	add    ebx,0x2da7
 804925f:	83 ec 0c             	sub    esp,0xc
 8049262:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 8049266:	8d b3 10 ff ff ff    	lea    esi,[ebx-0xf0]
 804926c:	e8 8f fd ff ff       	call   8049000 <_init>
 8049271:	8d 83 0c ff ff ff    	lea    eax,[ebx-0xf4]
 8049277:	29 c6                	sub    esi,eax
 8049279:	c1 fe 02             	sar    esi,0x2
 804927c:	85 f6                	test   esi,esi
 804927e:	74 25                	je     80492a5 <__libc_csu_init+0x55>
 8049280:	31 ff                	xor    edi,edi
 8049282:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8049288:	83 ec 04             	sub    esp,0x4
 804928b:	55                   	push   ebp
 804928c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8049290:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8049294:	ff 94 bb 0c ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf4]
 804929b:	83 c7 01             	add    edi,0x1
 804929e:	83 c4 10             	add    esp,0x10
 80492a1:	39 fe                	cmp    esi,edi
 80492a3:	75 e3                	jne    8049288 <__libc_csu_init+0x38>
 80492a5:	83 c4 0c             	add    esp,0xc
 80492a8:	5b                   	pop    ebx
 80492a9:	5e                   	pop    esi
 80492aa:	5f                   	pop    edi
 80492ab:	5d                   	pop    ebp
 80492ac:	c3                   	ret    
 80492ad:	8d 76 00             	lea    esi,[esi+0x0]

080492b0 <__libc_csu_fini>:
 80492b0:	f3 c3                	repz ret 
 80492b2:	66 90                	xchg   ax,ax
 80492b4:	66 90                	xchg   ax,ax
 80492b6:	66 90                	xchg   ax,ax
 80492b8:	66 90                	xchg   ax,ax
 80492ba:	66 90                	xchg   ax,ax
 80492bc:	66 90                	xchg   ax,ax
 80492be:	66 90                	xchg   ax,ax

080492c0 <__stack_chk_fail_local>:
 80492c0:	53                   	push   ebx
 80492c1:	e8 2a fe ff ff       	call   80490f0 <__x86.get_pc_thunk.bx>
 80492c6:	81 c3 3a 2d 00 00    	add    ebx,0x2d3a
 80492cc:	83 ec 08             	sub    esp,0x8
 80492cf:	e8 8c fd ff ff       	call   8049060 <__stack_chk_fail@plt>

Disassembly of section .fini:

080492d4 <_fini>:
 80492d4:	53                   	push   ebx
 80492d5:	83 ec 08             	sub    esp,0x8
 80492d8:	e8 13 fe ff ff       	call   80490f0 <__x86.get_pc_thunk.bx>
 80492dd:	81 c3 23 2d 00 00    	add    ebx,0x2d23
 80492e3:	83 c4 08             	add    esp,0x8
 80492e6:	5b                   	pop    ebx
 80492e7:	c3                   	ret    
